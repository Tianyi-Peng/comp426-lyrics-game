{"version":3,"sources":["App.js","index.js"],"names":["AppFrame","useState","loginType","setLoginType","name","setName","password","setPassword","isLight","setIsLight","showHint","setShowHint","next","setNext","over","setOver","highScore","setHighScore","correct","setCorrect","total","setTotal","currentSong","setCurrentSong","currentTitle","setCurrentTitle","hideSong","setHideSong","currentSongHint","setCurrentSongHint","choices","setChoices","correctChoice","setCorrectChoice","useEffect","getChoices","a","tries","arr","i","s","undefined","j","GET_SONG","track_id","track_name","artist_name","push","choice","Math","floor","random","has_lyrics","GET_LYRICS","lyrics","slice","indexOf","map","song","UPDATE_USER","class","onClick","CREATE_TWEET","icon","faSun","LyricsFrame","QuestionsFrame","disabled","style","visibility","SignIn","reg","RegExp","matchAll","replaceAll","whiteSpace","selected","setSelected","usernameInput","setUsernameInput","passwordInput","setPasswordInput","error","setError","login","CREATE_USER","VERIFY_USER","GET_USER","user","brightness","aria-label","type","placeholder","onInput","e","target","value","axios","method","url","params","apikey","data","message","body","track","lyrics_body","split","result","u","p","b","h","username","headers","success","score","_body","withCredentials","createdTweet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bae1d619.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bulma\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\n\n// To make this more appealing, we could use href and have links to other parts of the website\nexport default function AppFrame() {\n  let [loginType, setLoginType] = useState(0); // 0 = None, 1 = Sign Up, 2 = Log In\n  let [name, setName] = useState(\"\"); \n  let [password, setPassword] = useState(\"\"); // Maybe create a special update call that doesn't require the password\n  let [isLight, setIsLight] = useState(true); // Get from user preferences, default is true\n  let [showHint, setShowHint] = useState(false); \n  let [next, setNext] = useState(false); \n  let [over, setOver] = useState(false);\n  let [highScore, setHighScore] = useState(0); \n  let [correct, setCorrect] = useState(0); \n  let [total, setTotal] = useState(0); \n  let [currentSong, setCurrentSong] = useState(\"Loading...\"); // Reset to this\n  let [currentTitle, setCurrentTitle] = useState(\"currentTitle\"); \n  let [hideSong, setHideSong] = useState(false); \n  let [currentSongHint, setCurrentSongHint] = useState(\"\"); \n  let [choices, setChoices] = useState([]); \n  let [correctChoice, setCorrectChoice] = useState(0); \n\n  useEffect(() => {\n    let resetChoices = () => {\n      setCurrentSong(\"Loading...\");\n      setChoices([]); \n      setCurrentTitle(\"\"); \n      if(over){\n        setCorrect(0);\n        setTotal(0);\n        setOver(false); \n      }\n    }\n\n    let getChoices = async () => { \n      let tries = 10;\n      // Fill the array of choices\n      let arr = []; \n      for(let i = 0; i < 4; i++){\n        let s = undefined; \n        for(let j = 0; s === undefined && j < tries; j++){ // Number of times we'll retry (+1) if we don't get a valid song\n          s = await GET_SONG();\n        }\n        if(s === undefined){\n          s = {track_id: \"15953433\", track_name: \"Somebody That I Used to Know\", artist_name: \"Gotye\"}; \n        }\n        arr.push(s); \n      }\n\n      // Pick a song that has lyrics\n      let choice = Math.floor(Math.random()*4); \n      for(let j = 0; (arr[choice] === undefined || !arr[choice].has_lyrics) && j < tries; j++){\n        arr[choice] = await GET_SONG();\n      }\n      if(arr[choice] === undefined || !arr[choice].has_lyrics){\n        arr[choice] = {track_id: \"15953433\", track_name: \"Somebody That I Used to Know\", artist_name: \"Gotye\"}; \n      }\n\n      let lyrics = await GET_LYRICS(arr[choice].track_id); \n      setCorrectChoice(choice); // setCorrectChoice does not update correctChoice immediately\n      setCurrentTitle(arr[choice].track_name);\n      setCurrentSong(lyrics.slice(0, lyrics.indexOf(\"\\n\\n\"))); \n      setCurrentSongHint(lyrics.slice(lyrics.indexOf(\"\\n\\n\") + 1));\n      setHideSong(true);\n      \n      arr = arr.map(song => \"\\\"\" + song.track_name + \"\\\" by \" + song.artist_name); \n      setChoices(arr);\n    };\n    if(!next){resetChoices(); getChoices();}\n  }, [next]);\n\n  useEffect(async () => {\n    if(next){\n      setTotal(total + 1);\n      if(correct > highScore){\n        setHighScore(correct);\n        if(name != \"\"){\n          UPDATE_USER(name, password, isLight, highScore); \n        }\n      }\n    }\n  }, [next]); \n\n  return (\n    <div>\n      <section class={\"hero is-fullheight \" + (isLight ? \"is-white\" : \"is-black\")}>\n        <div class=\"hero-head\">\n          <nav class=\"navbar\">\n            <div class=\"container\">\n              <div class=\"navbar-brand\">\n                <a class=\"navbar-item\">\n                  <p class=\"is-size-3\">Lyrics Trainer</p>\n                </a>\n              </div>\n              <div class=\"navbar-menu\">\n                <div class=\"navbar-end\">\n                  <a class=\"navbar-item\" onClick={() => {CREATE_TWEET(name, highScore)}}>\n                    <div class=\"content\">\n                      <p class=\"heading has-text-primary m-0\">High Score</p>\n                      <p class=\"title has-text-primary\">{highScore}</p>\n                    </div>\n                  </a>\n                  <a class=\"navbar-item\" onClick={() => {setIsLight(!isLight); name != \"\" && UPDATE_USER(name, password, !isLight, highScore);}}>\n                    <span class=\"icon is-medium\">\n                      <FontAwesomeIcon icon={faSun} />\n                    </span>\n                  </a>\n                  <span class=\"navbar-item\">\n                    {name == \"\" &&\n                    <button class={\"button is-outlined \" + (isLight ? \"is-black\" : \"is-white\")} onClick={() => {setLoginType(1)}}>\n                      <span>Sign Up</span>\n                    </button>}\n                    {name != \"\" &&\n                    <div class=\"content\">\n                      <p class=\"heading has-text-primary m-0\">Welcome</p>\n                      <p class=\"title has-text-primary\">{name}</p>\n                    </div>}\n                  </span>\n                  <span class=\"navbar-item\">\n                    {name == \"\" &&\n                    <button class={\"button is-outlined \" + (isLight ? \"is-black\" : \"is-white\")}  onClick={() => {setLoginType(2)}}>\n                      <span>Log In</span>\n                    </button>}\n                    {name != \"\" &&\n                    <button class={\"button is-outlined \" + (isLight ? \"is-black\" : \"is-white\")} onClick={() => {setName(\"\"); setPassword(\"\");}}>\n                      <span>Log Out</span>\n                    </button>}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </div>\n\n        <div class=\"hero-body\">\n          <div class=\"container has-text-centered\">\n            <LyricsFrame currentSong={currentSong} currentSongHint={currentSongHint} currentTitle={currentTitle} showHint={showHint} hideSong={hideSong}/>\n            <QuestionsFrame choice={choices[0]} correctChoice={correctChoice === 0} next={next} setNext={setNext} correct={correct} setCorrect={setCorrect} setHideSong={setHideSong} setOver={setOver}/>\n            <QuestionsFrame choice={choices[1]} correctChoice={correctChoice === 1} next={next} setNext={setNext} correct={correct} setCorrect={setCorrect} setHideSong={setHideSong} setOver={setOver}/>\n            <QuestionsFrame choice={choices[2]} correctChoice={correctChoice === 2} next={next} setNext={setNext} correct={correct} setCorrect={setCorrect} setHideSong={setHideSong} setOver={setOver}/>\n            <QuestionsFrame choice={choices[3]} correctChoice={correctChoice === 3} next={next} setNext={setNext} correct={correct} setCorrect={setCorrect} setHideSong={setHideSong} setOver={setOver}/>\n            \n            <div class=\"columns is-centered\">\n              <div class=\"column is-one-third\">\n                <nav class=\"level\">\n                  <div class=\"level-item\">\n                    <button class=\"button is-outlined is-info\" disabled={showHint ? \"disabled\" : \"\"} onClick={() => setShowHint(true)}> \n                      <span>Get Hint</span>\n                    </button>\n                  </div>\n                  <div class=\"level-item\">\n                    <div class=\"content\">\n                      <p class=\"heading has-text-primary m-0\">Correct</p>\n                      <p class=\"title has-text-primary\">{correct} / {total}</p>\n                    </div>\n                  </div>\n                  <div class=\"level-item\">\n                    <button class=\"button is-outlined is-info\" onClick={() => {setCorrect(0); setTotal(0);}}>\n                      <span>Reset</span>\n                    </button>\n                  </div>\n                </nav>\n              </div>\n            </div>\n            \n            <button class=\"button is-outlined is-primary\" style={{visibility: next ? \"\" : \"hidden\"}} onClick={() => {setShowHint(false); setNext(false);}}>\n              <span>{over ? \"Try Again\" : \"Next Song\"}</span> \n            </button>\n          </div>\n        </div>\n        {loginType && <SignIn loginType={loginType} setLoginType={setLoginType} isLight={isLight} setIsLight={setIsLight} highScore={highScore} setHighScore={setHighScore} setName={setName} setPassword={setPassword}/>}\n      </section>\n    </div>\n  );\n}\n\nfunction LyricsFrame({currentSong, currentSongHint, currentTitle, showHint, hideSong}){\n  if(hideSong){\n    let reg = new RegExp(currentTitle, 'gi');\n    for(let s of currentSong.matchAll(reg)){ // This won't loop infinitely if the song title is ./../..., though the ellipses will look strange\n      currentSong = currentSong.replaceAll(s, \"...\"); \n    }\n  }\n  \n  return (\n    <div class=\"tile is-ancestor\">\n      <div class=\"tile is-vertical\">\n        <article class=\"tile is-child\">\n          <div class=\"content\" style={{whiteSpace: \"pre-wrap\"}}>\n            {currentSong}\n            <br/>\n            {showHint && currentSongHint}\n          </div>\n        </article>\n      </div>\n    </div>\n  ); \n}\n\nfunction QuestionsFrame({choice, correctChoice, next, setNext, correct, setCorrect, setHideSong, setOver}){\n  let [selected, setSelected] = useState(false); \n\n  useEffect(() => {\n    if(!next){\n      setSelected(false); \n    }\n  }, [next]);\n  \n  return (\n    <button class={\"button is-fullwidth m-4 \" + (next ? (correctChoice ? \"is-success\" : (selected ? \"is-danger\" : \"is-outlined is-primary\")) : \"is-outlined is-primary\")} \n    onClick={() => {setNext(true); setHideSong(false); !next && setSelected(true); correctChoice ? setCorrect(correct + 1) : setOver(true);}}>\n      <span>{choice}</span>\n    </button>\n  ); \n}\n\nexport function SignIn({loginType, setLoginType, isLight, setIsLight, highScore, setHighScore, setName, setPassword}){ \n  let [usernameInput, setUsernameInput] = useState(\"\"); \n  let [passwordInput, setPasswordInput] = useState(\"\"); \n  let [error, setError] = useState(\"\"); \n\n  let login = async () => {\n    if(usernameInput == \"\" || passwordInput == \"\"){\n      setError(\"Fill in both fields\");\n    }\n    else if(loginType === 1){\n      let result = await CREATE_USER(usernameInput, passwordInput, isLight, highScore); \n      if(result){\n        setLoginType(0);\n        setError(\"\"); \n        setName(usernameInput);\n        setPassword(passwordInput); \n      }\n      else{\n        setError(\"Username has already been taken\");\n      }\n    }\n    else if(loginType === 2){\n      let result = await VERIFY_USER(usernameInput, passwordInput); \n      if(result){\n        let user = await GET_USER(usernameInput); \n        setLoginType(0);\n        setError(\"\"); \n        setName(usernameInput);\n        setPassword(passwordInput);\n        setIsLight(user.brightness); \n        setHighScore(user.highScore); \n      }\n      else{\n        setError(\"Incorrect username or password\");\n      }      \n    }\n  }; \n\n  return (\n    <div class=\"modal is-clipped is-active\">\n      <div class=\"modal-background\" onClick={() => {setLoginType(0)}}>\n        <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n      </div>\n      <div class=\"modal-content\">\n        <div class=\"box\">\n          <div class=\"field\">\n            <p class=\"is-size-4\">{loginType === 1 ? \"Sign Up\" : loginType === 2 ? \"Log In\" : \"\"}</p>\n          </div>\n          <div class=\"field\">\n            <input class=\"input\" type=\"text\" placeholder=\"Username\" onInput={e => setUsernameInput(e.target.value)}/>\n          </div>\n          <div class=\"field\">\n            <input class=\"input\" type=\"text\" placeholder=\"Password\" onInput={e => setPasswordInput(e.target.value)}/>\n          </div>\n          {error !== \"\" && <span class={\"tag is-light is-medium \" + (error == \"Processing...\" ? \"is-info\" : \"is-danger\")}>{error}</span>}\n          <div class=\"level-item\">\n            <button class=\"button is-info is-fullwidth\" onClick={() => {setError(\"Processing...\"); login();}}>Submit</button> \n          </div>\n        </div>\n      </div>\n    </div>\n  ); \n}\n\nasync function GET_SONG() {\n  let track_id = Math.floor(Math.random() * 6000000); \n  let apikey = \"4c6c268c5ec5c4d7ac705f11e4c4bb45\"; \n  let song = await axios({\n    method: 'get',\n    url: 'https://gn7ugp7bo0.execute-api.us-east-1.amazonaws.com/Prod//ws/1.1/track.get', \n    params: {\n      track_id, apikey\n    }\n  });\n  return song.data.message.body.track; \n};\n\nasync function GET_LYRICS(track_id) {\n  let apikey = \"4c6c268c5ec5c4d7ac705f11e4c4bb45\"; \n  let lyrics = await axios({\n    method: 'get',\n    url: 'https://gn7ugp7bo0.execute-api.us-east-1.amazonaws.com/Prod//ws/1.1/track.lyrics.get', \n    params: {\n      track_id, apikey\n    }\n  });\n  return lyrics.data.message.body.lyrics.lyrics_body.split('...', 1)[0]; \n};\n\nasync function GET_USER(user) {\n  let result = await axios({\n    method: 'get',\n    url: `https://gn7ugp7bo0.execute-api.us-east-1.amazonaws.com/Prod/GetUser/${user}`\n  });\n  return result.data; // {brightness: boolean, highScore: int, username: string}\n};\n\nasync function CREATE_USER(u, p, b, h) {\n  let result = await axios({\n    method: 'post',\n    url: 'https://gn7ugp7bo0.execute-api.us-east-1.amazonaws.com/Prod/CreateUser', \n    data: {\n      username: u,\n      password: p,\n      brightness: b,\n      highScore: h\n    }, \n    headers: {\n      'Content-Type': 'text/plain',\n    }\n  });\n  return result.data.success; \n};\n\nasync function VERIFY_USER(u, p) {\n  let result = await axios({\n    method: 'post',\n    url: 'https://gn7ugp7bo0.execute-api.us-east-1.amazonaws.com/Prod/VerifyUser', \n    data: {\n      username: u,\n      password: p\n    },\n    headers: {\n      'Content-Type': 'text/plain',\n    }\n  });\n  return result.data.success; \n};\n\nasync function UPDATE_USER(u, p, b, h) {\n  let result = await axios({\n    method: 'post',\n    url: 'https://gn7ugp7bo0.execute-api.us-east-1.amazonaws.com/Prod/UpdateUser', \n    data: {\n      username: u,\n      password: p,\n      brightness: b,\n      highScore: h\n    },\n    headers: {\n      'Content-Type': 'text/plain',\n    }\n  });\n  return result.data.success; \n};\n\nasync function CREATE_TWEET(user, score) {\n  let _body = (user == \"\" ? \"Guest\" : user) + \" has gotten \" + score + \" songs correct in a row in Lyrics Trainer!\";\n  let createdTweet = await axios({\n      method: 'post',\n      url: 'https://comp426-1fa20.cs.unc.edu/a09/tweets',\n      data: {body: _body}, \n      withCredentials: true\n  });\n  return createdTweet; \n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bulma\"; \nimport AppFrame from './App';\n\n// We add the CORS header here because we want our page to be able to be modified by pages from other origins\n<meta http-equiv=\"Access-Control-Allow-Origin\" content=\"*\" />\nReactDOM.render(\n  <React.StrictMode>\n    <AppFrame />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}